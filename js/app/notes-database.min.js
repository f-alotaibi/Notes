const indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB||window.shimIndexedDB;var isDatabaseWorking=!0;indexedDB||(alert("IndexedDB could not be found in this browser."),isDatabaseWorking=!1);var notesMap=new Map;function loadNotes(e){if(!isDatabaseWorking)return;notesMap=new Map;let t=indexedDB.open("NotesDatabase",1);t.onsuccess=function(){const n=t.result,o=n.transaction("notes","readonly"),s=o.objectStore("notes").getAll();s.onsuccess=function(){s.result.forEach((e=>{let t=Note.from({title:e.title,content:e.content});notesMap.set(e.id,t)}))},o.oncomplete=function(){n.close(),console.log("load"),e&&e()}}}function newNote(e){if(!isDatabaseWorking)return;let t=indexedDB.open("NotesDatabase",1);t.onsuccess=function(){const n=t.result,o=n.transaction("notes","readwrite");o.objectStore("notes").put({title:`Note ${notesMap.size+1}`,content:""}),o.oncomplete=function(){n.close(),console.log("new"),e&&e()}}}function deleteNote(e,t){if(!isDatabaseWorking)return;let n=indexedDB.open("NotesDatabase",1);n.onsuccess=function(){const o=n.result,s=o.transaction("notes","readwrite");s.objectStore("notes").delete(e),notesMap.size-1==0&&(notesMap=new Map),s.oncomplete=function(){o.close(),console.log("delete"),t&&t()}}}function saveNotes(e){if(!isDatabaseWorking)return;let t=indexedDB.open("NotesDatabase",1);t.onsuccess=function(){const n=t.result,o=n.transaction("notes","readwrite"),s=o.objectStore("notes");for(let[e,t]of notesMap.entries())s.put({id:e,title:t.title,content:t.content});o.oncomplete=function(){n.close(),e&&e()}}}function saveNote(e,t){if(!isDatabaseWorking)return;let n=indexedDB.open("NotesDatabase",1);n.onsuccess=function(){const o=n.result,s=o.transaction("notes","readwrite"),a=s.objectStore("notes");let i=notesMap.get(e);a.put({id:e,title:i.title,content:i.content}),s.oncomplete=function(){o.close(),t&&t()}}}function startDatabase(){if(!isDatabaseWorking)return;let e=indexedDB.open("NotesDatabase",1);e.onerror=function(e){alert("An error occured with IndexedDB"+e)},e.onupgradeneeded=function(){const t=e.result.createObjectStore("notes",{keyPath:"id",autoIncrement:!0});t.createIndex("notes_id",["id"]),t.createIndex("notes_title",["title"],{unique:!1}),t.createIndex("notes_title_and_content",["title","content"],{unique:!1})},isDatabaseWorking=!0}startDatabase();